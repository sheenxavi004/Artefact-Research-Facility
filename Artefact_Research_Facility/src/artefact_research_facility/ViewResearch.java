/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package artefact_research_facility;

import java.awt.Component;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author sheenxavi004
 */

public class ViewResearch extends javax.swing.JFrame {

    /**
     * Creates new form ViewResearch
     */
    int Userid;
    
    public ViewResearch(){
        initComponents();
    }
    public ViewResearch(int userid){
        setTitle("Artefact Research Facility");
        setVisible(true);
        Userid = userid;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        topic = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        byyear = new javax.swing.JButton();
        searchtable = new javax.swing.JScrollPane();
        stable = new javax.swing.JTable();
        close = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        bytopic = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 17)); // NOI18N
        jLabel1.setText("View Research Data");

        jLabel2.setText("Enter File ID or Year to view the Research Data");

        jLabel4.setText("Year  :");

        topic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topicActionPerformed(evt);
            }
        });

        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });

        byyear.setText("Search by Year");
        byyear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byyearActionPerformed(evt);
            }
        });

        stable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "File ID", "Research Name", "File Name", "Author", "File"
            }
        ));
        searchtable.setViewportView(stable);
        if (stable.getColumnModel().getColumnCount() > 0) {
            stable.getColumnModel().getColumn(0).setMinWidth(70);
            stable.getColumnModel().getColumn(0).setMaxWidth(70);
            stable.getColumnModel().getColumn(2).setMinWidth(200);
            stable.getColumnModel().getColumn(2).setMaxWidth(200);
            stable.getColumnModel().getColumn(3).setMinWidth(150);
            stable.getColumnModel().getColumn(3).setMaxWidth(150);
            stable.getColumnModel().getColumn(4).setMinWidth(80);
            stable.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        close.setText("Go Back");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        jLabel6.setText("Topic  :");

        bytopic.setText("Search by Topic");
        bytopic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bytopicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchtable)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(topic, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                                .addGap(64, 64, 64))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bytopic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 441, Short.MAX_VALUE)))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(byyear, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 726, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(195, 195, 195))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(327, 327, 327))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(topic)
                    .addComponent(jLabel4)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(byyear)
                    .addComponent(bytopic))
                .addGap(23, 23, 23)
                .addComponent(searchtable, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(close)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void topicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_topicActionPerformed

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearActionPerformed

    private void byyearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byyearActionPerformed
        // TODO add your handling code here:
        int y = Integer.parseInt(year.getText());
        DefaultTableModel model = (DefaultTableModel)stable.getModel();
        model.setRowCount(0);
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Research_Artefact_Facility", "root","");
            Statement st = conn.createStatement();
            String query = "SELECT `author_id`,`username`,`research_name`,`research_id` FROM `user_info` JOIN `research_info` WHERE `doi` = '"+y+"' and  `user_info`.`user_id` = `research_info`.`author_id`";
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next())
            {
                int research_id = rs.getInt("research_id");
                String rname = rs.getString("research_name");
                String author = rs.getString("username");
                Statement stf = conn.createStatement();
                String fquery = "SELECT `file_id`,`file_location`,`file_name` FROM `file_info` WHERE `research_id` = '"+ research_id +"'";
                ResultSet rf = stf.executeQuery(fquery);
                while(rf.next())
                {
                    String fname = rf.getString("file_name");
                    int fid = rf.getInt("file_id");
                    String file_location = rf.getString("file_location");
                    Object row[] = {fid,rname,fname,author,file_location};
                    model.addRow(row);
                }
                stable.getColumn("File").setCellRenderer(new ButtonRenderer());
                stable.getColumn("File").setCellEditor(new ButtonEditor(new JTextField()));
            }
        } 
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_byyearActionPerformed

    private void bytopicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bytopicActionPerformed
        // TODO add your handling code here:
        String topin = topic.getText();
        DefaultTableModel model = (DefaultTableModel)stable.getModel();
        model.setRowCount(0);
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Research_Artefact_Facility", "root","");
            Statement st = conn.createStatement();
            String query = "SELECT `username`,`research_name`,`research_id`,`doi` FROM `user_info` JOIN `research_info` WHERE `research_name` = '"+topin+"' and  `user_info`.`user_id` = `research_info`.`author_id`";
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next())
            {
                int research_id = rs.getInt("research_id");
                int yr = rs.getInt("doi");
                String rname = rs.getString("research_name");
                String author = rs.getString("username");
                Statement stf = conn.createStatement();
                String fquery = "SELECT `file_id`,`file_name`,`file_location` FROM `file_info` WHERE `research_id` = '"+ research_id +"'";
                ResultSet rf = stf.executeQuery(fquery);
                while(rf.next())
                {
                    String fname = rf.getString("file_name");
                    int fid = rf.getInt("file_id");
                    String filelocation = rf.getString("file_location");
                    Object row[] = {fid,rname,fname,author,filelocation};
                    model.addRow(row);
                }
                stable.getColumn("File").setCellRenderer(new ButtonRenderer());
                stable.getColumn("File").setCellEditor(new ButtonEditor(new JTextField()));
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_bytopicActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        dispose();
        try {
                    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Research_Artefact_Facility", "root", "");
                    Statement st = conn.createStatement();
                    String query = "SELECT `user_id`,`superior_id` FROM `user_info` WHERE `user_id` = '" +Userid + "'";
                    ResultSet rs = st.executeQuery(query);
                    rs.next();
                    int Superior_id = rs.getInt("superior_id");
                    if (Superior_id == 0) {
                        int user_id = rs.getInt("user_id");
                        new Superior_View(user_id);
                    } else {
                        int user_id = rs.getInt("user_id");
                        new Researcher_View(user_id);
                    }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_closeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewResearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewResearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewResearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewResearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewResearch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bytopic;
    private javax.swing.JButton byyear;
    private javax.swing.JButton close;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane searchtable;
    private javax.swing.JTable stable;
    private javax.swing.JTextField topic;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
class ButtonRenderer extends JButton implements  TableCellRenderer
{

  public ButtonRenderer() {
    setOpaque(true);
  }
   
  public Component getTableCellRendererComponent(JTable table, Object value,
                   boolean isSelected, boolean hasFocus, int row, int column) {
    if (isSelected) {
      setForeground(table.getSelectionForeground());
      setBackground(table.getSelectionBackground());
    } else{
      setForeground(table.getForeground());
      setBackground(UIManager.getColor("Button.background"));
    }
    setText("Open");
    return this;
  }
}

//BUTTON EDITOR CLASS
class ButtonEditor extends DefaultCellEditor
{
  protected JButton btn;
   private String filel;
   private Boolean clicked;

   public ButtonEditor(JTextField txt) {
    super(txt);

    btn=new JButton();
    btn.setOpaque(true);

    //WHEN BUTTON IS CLICKED
    btn.addActionListener(new ActionListener() {

      @Override
      public void actionPerformed(ActionEvent e) {

        fireEditingStopped();
      }
    });
  }

   //OVERRIDE A COUPLE OF METHODS
   @Override
  public Component getTableCellEditorComponent(JTable table, Object obj,
      boolean selected, int row, int col) {

      //SET TEXT TO BUTTON,SET CLICKED TO TRUE,THEN RETURN THE BTN OBJECT
     filel=(obj==null) ? "":obj.toString();
     btn.setText("Open");
     clicked=true;
    return btn;
  }

  //IF BUTTON CELL VALUE CHNAGES,IF CLICKED THAT IS
   @Override
  public Object getCellEditorValue() {

     if(clicked)
      {
      //SHOW US SOME MESSAGE
          try{
            Desktop.getDesktop().open(new File(filel));
          }
          catch(Exception ex){
              JOptionPane.showMessageDialog(null,ex);
          }
      }
    //SET IT TO FALSE NOW THAT ITS CLICKED
    clicked=false;
    return new String(filel);
  }

   @Override
  public boolean stopCellEditing() {

         //SET CLICKED TO FALSE FIRST
      clicked=false;
    return super.stopCellEditing();
  }

   @Override
  protected void fireEditingStopped() {
    // TODO Auto-generated method stub
    super.fireEditingStopped();
  }
}